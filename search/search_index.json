{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Inicio","text":""},{"location":"#sobre-el-proyecto","title":"Sobre el Proyecto","text":"<p>Turbostore es una plataforma de comercio electr\u00f3nico din\u00e1mica inspirada en Tienda Nube, desarrollada como proyecto universitario. La plataforma permitir\u00e1 a los usuarios crear y gestionar sus propias tiendas en l\u00ednea de manera intuitiva y personalizable.</p>"},{"location":"#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<ul> <li>P\u00e1gina Inicial: Informaci\u00f3n general del proyecto, equipo y stack tecnol\u00f3gico</li> <li>Tablero Kanban: Gesti\u00f3n \u00e1gil del proyecto con sprints de 2 semanas</li> <li>Documentaci\u00f3n: Gu\u00edas t\u00e9cnicas y documentaci\u00f3n del desarrollo</li> <li>An\u00e1lisis: Documento de requerimientos y an\u00e1lisis del proyecto</li> </ul>"},{"location":"#navegacion","title":"Navegaci\u00f3n","text":"<ul> <li> <p>\ud83d\udcf1 P\u00e1gina Inicial</p> <ul> <li> <p>Descripci\u00f3n del proyecto</p> </li> <li> <p>Integrantes del equipo</p> </li> <li> <p>Stack tecnol\u00f3gico</p> </li> <li> <p>Objetivos principales</p> </li> </ul> </li> <li> <p>\ud83d\uded2 Gesti\u00f3n del proyectos</p> <ul> <li> <p>Backlog del producto</p> </li> <li> <p>16 sprints planificados</p> </li> <li> <p>Duraci\u00f3n: 2 semanas por sprint</p> </li> <li> <p>Total: 32 semanas de desarrollo</p> </li> </ul> </li> <li> <p>\ud83d\udcda Documentaci\u00f3n general</p> <ul> <li> <p>Especificaciones t\u00e9cnicas</p> </li> <li> <p>Gu\u00edas de desarrollo</p> </li> <li> <p>APIs y servicios</p> </li> <li> <p>Arquitectura del sistema</p> </li> </ul> </li> <li> <p>\ud83d\udccb Manual de Usuario</p> <ul> <li> <p>Requisitos funcionales</p> </li> <li> <p>Requisitos no funcionales</p> </li> <li> <p>Casos de uso</p> </li> <li> <p>An\u00e1lisis de viabilidad</p> </li> </ul> </li> </ul>"},{"location":"#repositorios-de-github","title":"Repositorios de Github","text":"<p>ui-turbostore-creator</p> <p>ui-turbostore-template</p> <p>bff-turbostore</p>"},{"location":"#stack-tecnologico-propuesto","title":"Stack Tecnol\u00f3gico Propuesto","text":"Stack Tecnolog\u00edas Front End Vite + React + Typescript Back End Nest.js Database Postgresql ORM Prisma Cache/eventos/notificaciones Redis"},{"location":"#integrantes-del-equipo","title":"Integrantes del Equipo","text":"Integrante Ocupaci\u00f3n dentro del proyecto Camila Soto Desarrollador Frontend Manuel Valenzuela Desarrollador Frontend Federico Leiva Desarrollador Fullstack Andrea Salazar Desarrollador Backend Brian Mamani Desarrollador Backend"},{"location":"#diagrama-de-arquitectura-del-sistema","title":"Diagrama de Arquitectura del Sistema:","text":"<pre><code>graph TD;\n    A[\"Cliente Web/Mobile\"] --&gt; B[\"Frontend - React/TypeScript\"];\n    B --&gt; C[\"Backend - Nest.js\"];\n    C --&gt; D[\"PostgreSQL\"];\n    C --&gt; E[\"Redis Cache\"];\n    E --&gt; C;\n    D --&gt; C;\n    C --&gt; F[\"Sistema de Notificaciones\"];\n    C --&gt; G[\"Servicios Externos\"];\n    G --&gt; H[\"Pasarela de Pagos\"];\n    G --&gt; I[\"Servicio de Emails\"];\n\n</code></pre> <p>Este diagrama muestra la arquitectura b\u00e1sica del sistema Turbostore, ilustrando la interacci\u00f3n entre los diferentes componentes tecnol\u00f3gicos.</p> <p>Gesti\u00f3n de Proyectos</p> <p> Documentaci\u00f3n general</p> <p>Manual de Usuario</p>"},{"location":"Manual%20de%20Usuario/","title":"Manual de Usuario","text":""},{"location":"Manual%20de%20Usuario/#guia-de-inicio-rapido","title":"Gu\u00eda de Inicio R\u00e1pido","text":"<p>Bienvenido a MultiTienda. Esta gu\u00eda te ayudar\u00e1 a comenzar r\u00e1pidamente con nuestra plataforma.</p>"},{"location":"Manual%20de%20Usuario/#primeros-pasos","title":"Primeros Pasos","text":"<ul> <li>Registro y acceso al sistema</li> <li>Configuraci\u00f3n inicial de tu perfil</li> <li>Tour por las funciones principales</li> <li>Personalizaci\u00f3n de preferencias</li> </ul>"},{"location":"Manual%20de%20Usuario/#funcionalidades-principales","title":"Funcionalidades Principales","text":"<ul> <li>Gesti\u00f3n de Cat\u00e1logo<ul> <li>B\u00fasqueda de productos</li> <li>Filtros y categorizaci\u00f3n</li> <li>Gesti\u00f3n de inventario</li> <li>Actualizaci\u00f3n de precios</li> </ul> </li> <li>Proceso de Venta<ul> <li>Crear nueva venta</li> <li>Aplicar descuentos</li> <li>M\u00e9todos de pago</li> <li>Emisi\u00f3n de comprobantes</li> </ul> </li> <li>Gesti\u00f3n de Clientes<ul> <li>Registro de clientes</li> <li>Historial de compras</li> <li>Programas de fidelizaci\u00f3n</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#faqs","title":"FAQs","text":"<ul> <li>Preguntas Frecuentes sobre Ventas<ul> <li>\u00bfC\u00f3mo anular una venta?</li> <li>\u00bfC\u00f3mo aplicar descuentos especiales?</li> <li>\u00bfC\u00f3mo generar reportes de ventas?</li> </ul> </li> <li>Preguntas Frecuentes sobre Inventario<ul> <li>\u00bfC\u00f3mo realizar un conteo de inventario?</li> <li>\u00bfC\u00f3mo gestionar productos agotados?</li> <li>\u00bfC\u00f3mo configurar alertas de stock?</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#resolucion-de-problemas","title":"Resoluci\u00f3n de Problemas","text":"<ul> <li>Problemas Comunes<ul> <li>Error en proceso de venta</li> <li>Problemas de impresi\u00f3n</li> <li>Errores de sincronizaci\u00f3n</li> <li>Problemas de conexi\u00f3n</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#manual-de-administrador","title":"Manual de Administrador","text":""},{"location":"Manual%20de%20Usuario/#panel-de-administracion","title":"Panel de Administraci\u00f3n","text":"<p>El panel de administraci\u00f3n proporciona acceso a todas las funciones avanzadas del sistema.</p> <ul> <li>Funciones Principales<ul> <li>Dashboard general</li> <li>Reportes en tiempo real</li> <li>Configuraci\u00f3n del sistema</li> <li>Herramientas de an\u00e1lisis</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#gestion-de-usuarios","title":"Gesti\u00f3n de Usuarios","text":"<ul> <li>Administraci\u00f3n de Cuentas<ul> <li>Crear nuevos usuarios</li> <li>Asignar roles y permisos</li> <li>Gestionar accesos</li> <li>Auditor\u00eda de actividades</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#configuracion-del-sistema","title":"Configuraci\u00f3n del Sistema","text":"<ul> <li>Par\u00e1metros Generales<ul> <li>Configuraci\u00f3n de la tienda</li> <li>Personalizaci\u00f3n de interfaces</li> <li>Configuraci\u00f3n de impuestos</li> <li>Integraci\u00f3n con servicios externos</li> </ul> </li> </ul>"},{"location":"Manual%20de%20Usuario/#monitoreo-y-logs","title":"Monitoreo y Logs","text":"<ul> <li>Herramientas de Monitoreo<ul> <li>Registro de actividades</li> <li>Alertas del sistema</li> <li>M\u00e9tricas de rendimiento</li> <li>Respaldos y recuperaci\u00f3n</li> </ul> </li> </ul>  \u26a0\ufe0f Recuerda mantener seguras tus credenciales de administrador y realizar cambios en el sistema con precauci\u00f3n."},{"location":"Documentaci%C3%B3n%20General/","title":"Documentaci\u00f3n Inicial","text":"<p>Esta p\u00e1gina contiene toda la documentaci\u00f3n relacionada con el desarrollo del proyecto Turbostore.</p>"},{"location":"Documentaci%C3%B3n%20General/#0-buenas-practicas-de-desarrollo","title":"0. Buenas pr\u00e1cticas de desarrollo","text":"<p>Gu\u00eda esencial con est\u00e1ndares y principios para escribir c\u00f3digo limpio, consistente y mantenible en NestJS y React.</p> <ul> <li>Convenciones de nombrado (variables, funciones, archivos)</li> <li>Estructura de carpetas en frontend y backend</li> <li>Principios DRY, SOLID, KISS y YAGNI</li> <li>Patrones de dise\u00f1o utilizados</li> <li>Buenas pr\u00e1cticas en React y NestJS</li> <li>Estilo de commits y flujo Git</li> <li>Documentaci\u00f3n del c\u00f3digo</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/#1-documentacion-tecnica","title":"1. Documentaci\u00f3n T\u00e9cnica","text":"<p>Informaci\u00f3n fundamental sobre c\u00f3mo est\u00e1 construido el sistema a nivel t\u00e9cnico.</p> <ul> <li>Arquitectura del Sistema</li> </ul> <pre><code>Descripci\u00f3n general de c\u00f3mo se estructuran los componentes principales del sistema y su comunicaci\u00f3n. Incluye diagramas, patrones utilizados e integraciones clave.\n</code></pre> <ul> <li> <p>Base de Datos</p> <p>Modelo de datos completo, diagramas ERD, diccionario de datos con definici\u00f3n de tablas/campos y ejemplos de queries relevantes.</p> </li> <li> <p>APIs y Servicios</p> <p>Detalle de los endpoints REST disponibles, c\u00f3mo autenticarse y c\u00f3mo consumir los servicios. Incluye ejemplos y Postman Collections.</p> </li> </ul>"},{"location":"Documentaci%C3%B3n%20General/#2-guias-de-desarrollo","title":"2. Gu\u00edas de Desarrollo","text":"<p>Buenas pr\u00e1cticas, configuraciones y est\u00e1ndares que debe seguir todo el equipo para mantener la calidad del c\u00f3digo.</p> <ul> <li>Setup del Proyecto</li> </ul> <pre><code>Requisitos t\u00e9cnicos, pasos para instalar y levantar el entorno local, configuraci\u00f3n inicial y variables de entorno necesarias.\n</code></pre> <ul> <li> <p>Est\u00e1ndares de C\u00f3digo</p> <p>Convenciones para escribir c\u00f3digo claro y mantenible. Incluye estilos de codificaci\u00f3n, reglas de nombrado, principios como DRY/SOLID, testing y revisi\u00f3n de c\u00f3digo.</p> </li> </ul>"},{"location":"Documentaci%C3%B3n%20General/#3-control-de-versiones","title":"3. Control de Versiones","text":"<p>Estandarizaci\u00f3n del flujo de trabajo con Git para asegurar un desarrollo colaborativo ordenado.</p> <ul> <li>Gesti\u00f3n de Repositorio</li> </ul> <pre><code>Reglas para creaci\u00f3n y uso de ramas, nombres de commits, flujos Git recomendados y convenciones para versionado sem\u00e1ntico.\n</code></pre>"},{"location":"Documentaci%C3%B3n%20General/#4-despliegue","title":"4. Despliegue","text":"<p>Informaci\u00f3n sobre c\u00f3mo se publica y mantiene el sistema en distintos entornos (Dev, Stage, Prod).</p> <ul> <li>Proceso de Deploy</li> </ul> <pre><code>Explicaci\u00f3n del flujo de CI/CD, pasos para realizar un despliegue seguro, backups y herramientas de monitoreo utilizadas.\n</code></pre>"},{"location":"Documentaci%C3%B3n%20General/#5-seguridad","title":"5. Seguridad","text":"<p>Pol\u00edticas y buenas pr\u00e1cticas para proteger el sistema y los datos de los usuarios.</p> <ul> <li>Pol\u00edticas de Seguridad</li> </ul> <pre><code>Incluye autenticaci\u00f3n/autorizaci\u00f3n, cifrado de datos sensibles, auditor\u00edas, y recomendaciones generales para un desarrollo seguro.\n</code></pre> <p>\ud83d\udca1 Nota</p> <p>Esta documentaci\u00f3n se ir\u00e1 actualizando a medida que avance el desarrollo del proyecto. Cada equipo debe mantener actualizada su secci\u00f3n correspondiente. </p> <p>Buenas pr\u00e1cticas de desarrollo</p> <p>Arquitectura de Aplicaci\u00f3n</p> <p>Documentaci\u00f3n T\u00e9cnica</p> <p>Gu\u00edas de Desarrollo</p> <p>Control de Versiones (GitFlow)</p> <p>Despliegue (CI/CD)</p> <p>Seguridad</p>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/","title":"Buenas pr\u00e1cticas de desarrollo","text":""},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#indice","title":"\ud83d\udccc \u00cdndice","text":"<ol> <li> <p>\ud83d\udd24 Convenciones de nombramiento</p> <p>Gu\u00eda para nombrar variables, funciones, clases y archivos de forma consistente y clara en NestJS y React.</p> </li> <li> <p>\ud83d\udcc2 Estructura del c\u00f3digo</p> <p>Recomendaciones sobre c\u00f3mo organizar carpetas y archivos para mantener un proyecto escalable y mantenible.</p> </li> <li> <p>\ud83e\udde0 Principios de desarrollo</p> <p>Fundamentos como DRY, KISS, YAGNI y SOLID que ayudan a escribir c\u00f3digo limpio, reutilizable y f\u00e1cil de mantener.</p> </li> <li> <p>\u269b\ufe0f Buenas pr\u00e1cticas en React</p> <p>Reglas espec\u00edficas para componentes, hooks, manejo de estado y estructura en proyectos con React.</p> </li> <li> <p>\ud83e\uddae Buenas pr\u00e1cticas en NestJS</p> <p>Est\u00e1ndares recomendados para servicios, controladores, DTOs y organizaci\u00f3n de m\u00f3dulos en NestJS.</p> </li> <li> <p>\ud83c\udf3f Control de versiones (Git)</p> <p>Convenciones para mensajes de commits, uso de ramas y manejo colaborativo del repositorio con Git.</p> </li> <li> <p>\ud83e\udde9 Patrones comunes de dise\u00f1o</p> <p>Patrones de arquitectura y dise\u00f1o recomendados para proyectos modernos, como repositorio, factory o singleton.</p> </li> <li> <p>\ud83d\udcdd Documentaci\u00f3n</p> <p>C\u00f3mo y cu\u00e1ndo documentar funciones, endpoints y componentes, incluyendo herramientas \u00fatiles.</p> </li> <li> <p>\ud83e\uddea Testing</p> <p>Buenas pr\u00e1cticas para pruebas unitarias, de integraci\u00f3n y end-to-end tanto en el backend como en el frontend.</p> </li> <li> <p>\ud83d\udd0d Revisi\u00f3n de c\u00f3digo</p> <p>Gu\u00eda para realizar code reviews efectivos y constructivos, con foco en la calidad y consistencia del c\u00f3digo.</p> </li> </ol>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#convenciones-de-nombramiento","title":"\ud83d\udd24 Convenciones de nombramiento","text":"<p>Gu\u00eda para nombrar elementos del c\u00f3digo de forma clara y consistente:</p> Elemento NestJS React Variables <code>camelCase</code> <code>camelCase</code> Funciones <code>camelCase</code> <code>camelCase</code> Clases <code>PascalCase</code> <code>PascalCase</code> Interfaces <code>PascalCase</code>, opcional <code>I</code> <code>PascalCase</code>, opcional <code>I</code> Archivos <code>kebab-case</code> <code>PascalCase.tsx</code> o <code>kebab-case.ts</code> Constantes <code>UPPER_SNAKE_CASE</code> <code>UPPER_SNAKE_CASE</code>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#estructura-del-codigo","title":"\ud83d\udcc2 Estructura del c\u00f3digo","text":"<p>\ud83d\udc31 NestJS</p> <pre><code>src/\n\u251c\u2500\u2500 modules/\n\u2502   \u251c\u2500\u2500 users/\n\u2502   \u2502   \u251c\u2500\u2500 controllers/\n\u2502   \u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u251c\u2500\u2500 dtos/\n\u2502   \u2502   \u251c\u2500\u2500 entities/\n\u2502   \u2502   \u251c\u2500\u2500 users.module.ts\n\u2502   \u2502   \u2514\u2500\u2500 users.service.ts\n\u2502   \u2514\u2500\u2500 auth/\n\u2502       \u251c\u2500\u2500 strategies/\n\u2502       \u251c\u2500\u2500 guards/\n\u2502       \u251c\u2500\u2500 dtos/\n\u2502       \u2514\u2500\u2500 auth.module.ts\n\u2502\n\u251c\u2500\u2500 common/\n\u2502   \u251c\u2500\u2500 decorators/\n\u2502   \u251c\u2500\u2500 filters/\n\u2502   \u251c\u2500\u2500 interceptors/\n\u2502   \u251c\u2500\u2500 guards/\n\u2502   \u2514\u2500\u2500 utils/\n\u2502\n\u251c\u2500\u2500 config/\n\u2502   \u2514\u2500\u2500 configuration.ts\n\u2502\n\u251c\u2500\u2500 main.ts\n\u2514\u2500\u2500 app.module.ts\n</code></pre> <p>\u269b\ufe0f React</p> <pre><code>src/\n\u251c\u2500\u2500 features/\n\u2502   \u251c\u2500\u2500 users/\n\u2502   \u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2502   \u251c\u2500\u2500 services/\n\u2502   \u2502   \u251c\u2500\u2500 types/\n\u2502   \u2502   \u2514\u2500\u2500 index.ts\n\u2502\n\u251c\u2500\u2500 shared/\n\u2502   \u251c\u2500\u2500 components/    \u2190 reutilizables en todo el proyecto\n\u2502   \u251c\u2500\u2500 utils/\n\u2502   \u251c\u2500\u2500 constants/\n\u2502   \u251c\u2500\u2500 hooks/\n\u2502   \u2514\u2500\u2500 styles/\n\u2502\n\u251c\u2500\u2500 router/\n\u2502   \u2514\u2500\u2500 AppRouter.tsx\n\u2502\n\u251c\u2500\u2500 App.tsx\n\u2514\u2500\u2500 main.tsx (o index.tsx)\n</code></pre>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#principios-de-desarrollo","title":"\ud83e\udde0 Principios de desarrollo","text":"<ul> <li>DRY (Don't Repeat Yourself): Evit\u00e1 repetir l\u00f3gica innecesaria.</li> <li>KISS (Keep It Simple, Stupid): Manten\u00e9 el c\u00f3digo simple y directo.</li> <li>YAGNI (You Aren\u2019t Gonna Need It): No desarrolles lo que no se necesita a\u00fan.</li> <li>SOLID:<ul> <li>Single Responsibility</li> <li>Open/Closed</li> <li>Liskov Substitution</li> <li>Interface Segregation</li> <li>Dependency Inversion</li> </ul> </li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#buenas-practicas-en-react","title":"\u269b\ufe0f Buenas pr\u00e1cticas en React","text":"<ul> <li>Usar componentes funcionales con hooks.</li> <li>Separar l\u00f3gica de presentaci\u00f3n.</li> <li>Preferir <code>useEffect</code>, <code>useMemo</code>, <code>useCallback</code> bien definidos.</li> <li>Nombrar componentes con PascalCase.</li> <li>Evitar estados innecesarios, usar contextos o herramientas como Redux/TanStack Query donde sea necesario.</li> <li>Crear archivos por componente.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#buenas-practicas-en-nestjs","title":"\ud83e\uddae Buenas pr\u00e1cticas en NestJS","text":"<ul> <li>Separar bien controladores, servicios y DTOs.</li> <li>Usar <code>@Injectable()</code> correctamente para servicios.</li> <li>Validar datos con <code>class-validator</code> y <code>class-transformer</code>.</li> <li>Modularizar por feature.</li> <li>Mantener DTOs simples y reutilizables.</li> <li>No acoplar controladores con l\u00f3gica de negocio.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#control-de-versiones-git","title":"\ud83c\udf3f Control de versiones (Git)","text":"<ul> <li> <p>Convenci\u00f3n de commits (ej. Conventional Commits):</p> <p><code>feat: nueva funcionalidad fix: correcci\u00f3n de bug chore: cambios menores o mantenimiento refactor: cambios internos sin alterar comportamiento</code></p> </li> <li> <p>Usar ramas por feature: <code>feature/login</code>, <code>bugfix/user-avatar</code>, etc.</p> </li> <li>Pull Requests con revisiones claras y mensajes explicativos.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#patrones-comunes-de-diseno","title":"\ud83e\udde9 Patrones comunes de dise\u00f1o","text":"<ul> <li>Repository Pattern (NestJS con TypeORM o Prisma)</li> <li>Factory Pattern (crear instancias con l\u00f3gica espec\u00edfica)</li> <li>Service Layer (React o NestJS)</li> <li>Singleton Pattern (servicios compartidos)</li> <li>Container / Presentational Components (React)</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#documentacion","title":"\ud83d\udcdd Documentaci\u00f3n","text":"<ul> <li>Usar <code>JSDoc</code> o comentarios descriptivos para funciones complejas.</li> <li>Documentar endpoints en Swagger (NestJS).</li> <li>Documentar props y componentes reutilizables en React.</li> <li>Manten\u00e9 un README claro con instrucciones de instalaci\u00f3n y ejecuci\u00f3n.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#testing","title":"\ud83e\uddea Testing","text":"<p>NestJS</p> <ul> <li>Usar <code>@nestjs/testing</code> con Jest.</li> <li>Mockear dependencias en unit tests.</li> <li>Probar controladores, servicios y pipes.</li> </ul> <p>React</p> <ul> <li>Usar <code>@testing-library/react</code> + Jest.</li> <li>Escribir tests por comportamiento, no por implementaci\u00f3n.</li> <li>Testear casos edge y errores.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/buenas_practicas/#revision-de-codigo","title":"\ud83d\udd0d Revisi\u00f3n de c\u00f3digo","text":"<ul> <li>Verificar claridad del c\u00f3digo.</li> <li>Evitar c\u00f3digo duplicado.</li> <li>Buscar violaciones a DRY, KISS, SOLID.</li> <li>Sugerir mejoras, no solo se\u00f1alar errores.</li> <li>Validar que se mantengan convenciones del equipo.</li> </ul>"},{"location":"Documentaci%C3%B3n%20General/Arquitectura%20de%20aplicacion/","title":"Arquitectura de Aplicaci\u00f3n","text":""},{"location":"Documentaci%C3%B3n%20General/Arquitectura%20de%20aplicacion/#1-creator","title":"\ud83d\udee0\ufe0f 1. Creator","text":"<p>\ud83c\udfaf Prop\u00f3sito:</p> <p>Es el panel de gesti\u00f3n desde donde los usuarios crean y configuran su tienda. Act\u00faa como una interfaz amigable para construir una tienda sin conocimientos t\u00e9cnicos.</p> <p>\ud83e\udde9 Funcionalidades:</p> <ul> <li>Registro / inicio / cierre de sesi\u00f3n</li> <li>Creaci\u00f3n y personalizaci\u00f3n de tienda (colores, templates, logo, etc.)</li> <li>Gesti\u00f3n de productos y categor\u00edas</li> <li>Configuraci\u00f3n de m\u00e9todos de pago y env\u00edo</li> <li>Activaci\u00f3n / desactivaci\u00f3n de tienda</li> <li>Vista previa de la tienda basada en templates</li> </ul> <p>\ud83d\udcce Acceso:</p> <p>\u2192 [Ir a la p\u00e1gina del Creator]</p>"},{"location":"Documentaci%C3%B3n%20General/Arquitectura%20de%20aplicacion/#2-template","title":"\ud83c\udfa8 2. Template","text":"<p>\ud83c\udfaf Prop\u00f3sito:</p> <p>Representa la tienda visible para los compradores. Es una app frontend completamente din\u00e1mica y configurable, que consume la configuraci\u00f3n establecida en el Creator.</p> <p>\ud83e\udde9 Funcionalidades:</p> <ul> <li>Renderizado de tienda seg\u00fan configuraci\u00f3n del Creator</li> <li>Dise\u00f1o modular con componentes reutilizables</li> <li>Sistema de temas (tipograf\u00eda, colores, estilos)</li> <li>Ruteo, Redux, servicios HTTP, manejo de estados y carga</li> <li>P\u00e1ginas predefinidas: Home, Producto, Categor\u00eda, Contacto, etc.</li> <li>Componentes reutilizables: Navbar, Cards, Botones, Loaders (Skeletons), etc.</li> </ul> <p>\ud83d\udcce Acceso:</p> <p>\u2192 [Ir a la p\u00e1gina del Template]</p>"},{"location":"Documentaci%C3%B3n%20General/Arquitectura%20de%20aplicacion/#3-infraestructura-backend","title":"\ud83e\udde0 3. Infraestructura Backend","text":"<p>\ud83c\udfaf Prop\u00f3sito:</p> <p>Proporciona los servicios y la base de datos para toda la plataforma. Es el motor que gestiona la l\u00f3gica, persistencia y autenticaci\u00f3n de TurboStore.</p> <p>\ud83e\udde9 Tecnolog\u00edas:</p> <ul> <li>NestJS como framework base</li> <li>Prisma ORM</li> <li>PostgreSQL como base de datos</li> <li>Redis para cacheo de datos y sesiones</li> <li>JWT para autenticaci\u00f3n y renovaci\u00f3n de sesi\u00f3n</li> </ul> <p>\ud83e\udde9 Avances:</p> <ul> <li>Investigaci\u00f3n y testing de stack</li> <li>Modelo entidad-relaci\u00f3n (DER)</li> <li>Desarrollo de endpoints de autenticaci\u00f3n</li> <li>APIs para tienda, productos, configuraci\u00f3n, etc.</li> </ul> <p>\ud83d\udcce Acceso:</p> <p>\u2192 [Ir a la p\u00e1gina del Backend]</p> <p>BFF</p> <p>Creator</p> <p>Template</p>"}]}